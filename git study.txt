### 깃(git)이란?

깃은 컴퓨터 파일의 변경사항을 추적하고 여러 명의 사용자들 간에 해당 파일들의 작업을 조율하기 위한 스냅샷 스트림 기반의 분산 버전 관리 시스템이다. 

VCS(Version Control System): 버전들을 관리하는 시스템이다.

로컬은 여러가지가 있고 원격은 하나만 존재한다.

## 추가하기와 커밋하기

Git Repo? 

깃 저장소. 깃에게 계속 프로젝트를 저장하라고 하는 그 저장공간

- `git status` 깃 저장소 정보를 보여줌
- `git init` 명령어를 실행하는 터미널에서 새로운 깃 저장소를 실체화. 빈 깃 저장소를 생성하거나 기존 저장소를 다시 초기화 한다.
- 깃은 폴더 안에 있는 모든 정보를 추적한다.
    1. 어떤 프로젝트를 위해 이 디렉토리에서 변경하는 파일이나 폴더는 깃에 의해 추적된다.
    2. 현재 존재하는 저장소 안에 다른 저장소를 초기화하고 싶지 않다는 것을 이해하는 것은 아주 중요하다. 

**커밋(commit)**이란?

추가한 각각의 체크포인트를 의미함.

### 명령어(git add, git commit, git log)

- **깃 추가**
    
    : 커밋에 포함할 변경사항을 저장하거나 하이라이트 하기 위해 사용한다. 
    
    기본적인 깃 작업절차: 파일 생성 및 수정 → 파일에 변화 → 커밋
    
    - `git add` 파일명
        
        예시) `git add` 옮길파일 → 스테이지에 들어감 → 커밋
        
    - `git add .` 파일명: 한번에 모든 변경사항들을 스테이지에 넣는다.
- **깃 커밋**: 변경사항 추가
    - `git commit` 변경사항 추가함. 여기서 vs코드로 설정해놓으면 vs code에 들어가서 설정할 수 있음.
    - `git commit -m “my message”` : 메세지를 사용하여 커밋. 이때 메시지는 변경사항에 대한 요약이어야 함.
    - `git commit -a -m “my message”`
- 커밋 로그 줄이기
    - `--oneline` = `--pretty=onlie --abbrev-commit`
- **깃 로그 검색**
    
    `git log`: 깃 저장소에 대한 정보들을 검색. (커밋 정보들 볼 수 있음)
    
    [커밋해시](https://www.notion.so/Git-GitHub-2a78eff231d64000b18f8d0febf4dffc?pvs=21), 이름, 이메일, 수정날짜가 나옴
    
- `code .`: 비쥬얼 코드 열기